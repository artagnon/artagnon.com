reMarkable: the perfect tablet for academics

<<
rM-reading.jpg
rM-writing.jpg
>>

What a wonderful device for reading and writing! The reMarkable is as close to paper as it gets; no distractions, and no anti-features like search. Certain pieces are proprietary, but easy to reverse-engineer: it's great to hack on as a result. rM has an ample 6~7 GiB of storage, and a [command-line interface](https://github.com/juruen/rmapi) to their native cloud. You can export your handwriting to [SVG](https://github.com/ax3l/lines-are-beautiful) or to plain text, using their fantastic OCR technology. However, it's a device that targets a very niche audience: a large segment of the population would be much happier with a general-purpose device like the iPad or Surface; people who read novels would get a Kobo, and designers would get a Wacom. The rM is for mathematicians, scientists, and (probably) journalists; the flood of negative reviews can be explained away by this simple fact.

Immediately after unboxing, I attempted to bulk-upload my books and papers to their cloud, and was annoyed that the existing annotations in my PDFs were erased. Another source of initial disappointment: their cloud iss slow and glitchy compared to industry-standard solutions like Dropbox, and I decided that they made a bad decision by going with their own cloud instead of just connecting to Dropbox. I poked around a bit, and found that you can opt-out of the cloud altogether, and transfer files via the provided USB cable. Further, I discovered that rM uses mostly GPLv3 software, and that I could ssh into the device. The OCR is great, but I didn't quite understand the utility, as you only have the option to email the notes after running the OCR; I was having a hard time imagining someone who would prefer hand-writing an email over typing it out.

The proprietary bits are `xochitl` (the main UI), the cloud API, and the `.rM` file format. All three items have been reverse-engineered, and the community is [thriving](https://remarkablewiki.com); [community-developed apps](https://github.com/reHackable/awesome-reMarkable) are starting to pop up. Along with each PDF, rM stores associated metadata like the current page you're on, in JSON files, and brush strokes, in a beautifully simple binary format (the `.rM`). I'm glad they didn't choose to write annotations directly to the PDF; it would have been a nightmare to rewrite and upload the entire PDF on each save, and have to deal with binary-merge issues. I have extensive experience using PDF Expert on my iPad to know that it's a bad idea to save annotations in-file. Converting existing annotations to brush strokes should be doable, but I decided that it wasn't worth the effort.

Within a few days, I realized that the native cloud was a good idea, because they built their own elegant cloud API, in line with their overall design philosophy. Other than for the intial bulk-transfer, their cloud works quite well: you only ever upload/download one PDF or a few brush strokes at a time thereafter. The main utility of the OCR isn't to write email to other people as I'd initially thought, but serves as a replacement for a physical diary; I was skeptical at first, because I love using my Lamy fountain pen to write in my diary, but the writing experience on the rM is on par.

In summary, rM is cutting-edge technology with a niche audience. The build-quality of the tablet, pencil, and folio justify the â‚¬600 price tag.