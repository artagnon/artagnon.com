On minimalism and web design

I started out with these goals in mind:

0. I want to to compose from within the comfort of Emacs, and can't
   live without version control.  That narrows it down to a static
   site generator.

1. I want to write like I write emails to the git list; formatting
   should be in my control.  The objective is to get output html to
   faithfully represent the textual input, not to put the input
   through layers of mangling.  Markdown doesn't fit the bill.

2. I'm a programmer interested in minimalism and corectness, not
   unnecessary prettification.  CSS frameworks are an overkill:
   hand-written CSS will do just fine.

3. I want to be as terse as possible, and the software should be an
   absolute pleasure to develop/use.  This means Ruby, obviously ;)

This website is the result.  Its html is a minimally correct
translation of the textual input [1].  The Ruby code behind it is
simple and cute [2].

I wrote the frontend to work with all modern browsers and devices: on
smaller devices, it switches to a semantically different site using a
mobile.css.  I haven't gone overboard to write tons of rules for
various widths and build a truly responsive design though.  This is
the bare minimum I use:

1. A CSS reset to give every implementation (browser) visually similar
   defaults, so your CSS is browser-independent [3].

2. A meta viewport tag to standarize the ruler you're working with, so
   your CSS scales to different device widths.

[1]: http://artagnon.com/log:clayoven
[2]: https://github.com/artagnon/clayoven
[3]: http://git.io/normalize
