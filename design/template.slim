doctype html
html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang=""
  head
    title artagnon.com: #{permalink}
    meta charset="UTF-8"
    meta name="description" content="Ramkumar Ramachandra's site"
    meta name="author" content="Ramkumar Ramachandra"
    meta name="keywords" content="mathematics, mathematical notes, study notes, james munkres, miles reid, dummit and foote, ravi vakil, rising sea, allen hatcher, saunders mac lane, categories for the working mathematician"
    meta name="viewport" content="width=device-width, initial-scale=1.0"
    link rel="stylesheet" href="/design/all.css" media="all"
    link rel="stylesheet" href="/design/screen.css" media="screen"
    link rel="stylesheet" href="/design/mobile.css" media="only screen and (max-width: 600px)"
    link rel="stylesheet" href="/design/print.css" media="only print"
    link rel="stylesheet" type="text/css" href="//fonts.googleapis.com/css?family=Josefin+Sans|Roboto+Mono"
    script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.3/jquery.min.js"
    script type="text/javascript" src="/design/claytext.js"
    link rel="shortcut icon" href="/design/favicon.ico"
    script type="text/javascript" src="/design/analyticstracking.js"
    script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js"
    script type="text/x-mathjax-config" MathJax.Hub.Config({ extensions: ["tex2jax.js"], jax: ["input/TeX","output/HTML-CSS"], "HTML-CSS": { styles: {".MathJax_Preview": {visibility: "hidden"}} }, tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]}, TeX: {extensions: ["/xypic.js","AMSmath.js","AMSsymbols.js"]} });
    link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/styles/default.min.css"
    script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.13.1/highlight.min.js"
    script hljs.initHighlightingOnLoad();
  body
    div id="wrapper"
      div id="main"
        h1 #{title}
        span id="pubdate" Created: #{authdate}
        br
        span id="pubdate" Last updated: #{pubdate}
        - paragraphs.each do |paragraph|
          - if paragraph.is_header?
            p class="header"
              == paragraph.contents.join "\n"
          - if paragraph.is_plain?
            p
              == paragraph.contents.join "\n"
          - elsif paragraph.is_olitems?
            ol class="olitems" type="#{paragraph.prop}" start="#{paragraph.start}"
              - for item in paragraph.contents
                li
                  == item
          - elsif paragraph.is_ulitems?
            ul class="ulitems"
              - for item in paragraph.contents
                li
                  == item
          - elsif paragraph.is_subheading?
            h2 id="#{paragraph.bookmark}"
              == paragraph.contents.join "\n"
          - elsif paragraph.is_footer?
            p class="footer"
              == paragraph.contents.join "\n"
          - elsif paragraph.is_codeblock?
            pre
              code
                == paragraph.contents.join "\n"
          - elsif paragraph.is_horizrule?
            hr
          - elsif paragraph.is_mathjax?
            p class="mathjax"
              == paragraph.contents.join "\n"
        - if indexfill
          ul id="indexfill"
            - indexfill.each do |page|
              li
                a href="/#{page.permalink}"
                  = page.title
      div id="sidebar"
        ul
          - if topics
            - topics.each do |topic|
              li
                a href="/#{topic}"
                  = topic
