doctype html
html
  head
    title #{title} | artagnon.com
    meta charset="utf-8"
    meta name="language" content="english"
    meta name="author" content="Ramkumar Ramachandra"
    meta name="city" content="Paris"
    meta name="country" content="France"
    meta name="keywords" content="mathematics, mathematical notes, study notes, programming, blog, personal website"
    meta name="HandheldFriendly" content="true"
    meta name="viewport" content="width=device-width, initial-scale=1.0"
    meta name="robots" content="index,follow"
    link rel="icon" href="/dist/favicon.ico"

    // synchronously load our stylesheet, compiled from various css files in design/
    link rel="stylesheet" href="/dist/style.min.css"

    // load google fonts using Web Font Loader; the Loader itself is downloaded synchronously to avoid FOUT
    script src="//ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js"
    javascript:
      WebFont.load({
        google: {
          families: ['Josefin Sans', 'Roboto Mono']
        }
      });

    // cash, dayjs, mathjax, xypic
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/cash/6.0.1/cash.min.js"
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/dayjs/1.8.35/dayjs.min.js"
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/dayjs/1.8.35/plugin/relativeTime.min.js"
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/latest.js"
    script type="text/x-mathjax-config" MathJax.Hub.Config({
      extensions: ["tex2jax.js"], jax: ["input/TeX","output/HTML-CSS"],
      "HTML-CSS": { styles: {".MathJax_Preview": {visibility: "hidden"}} },
      tex2jax: {inlineMath: [["$","$"],["\\(","\\)"]]},
      TeX: {extensions: ["/dist/xypic.min.js","AMSmath.js","AMSsymbols.js"]} });

    // preload hljs css, since solarized-light is heavy
    link rel="preload" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/solarized-light.min.css" as="style" onload="this.onload=null;this.rel='stylesheet'"
    noscript
      link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/styles/solarized-light.min.css"

    // the js components of hljs
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/highlight.min.js"
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/languages/coq.min.js"
    script defer=true src="//cdnjs.cloudflare.com/ajax/libs/highlight.js/9.18.1/languages/cpp.min.js"

    // our js, compiled from js files in design/
    script defer=true src="/dist/script.min.js"
  body
    div id="wrapper"
      main tabindex="0"
        header
          h1 == title
          div id="metadata"
            span id="timestamp"
              time datetime="#{crdate.strftime('%F')}" class="begin" = crdate.rfc2822
              span class="to" ↪
              time datetime="#{lastmod.strftime('%F')}" class="end" = lastmod.rfc2822
            br
            span id="locations"
              address = locations.join ", "
            - case audience
              - when "vn"
                span id="audience" = "Très niche"
              - when "n"
                span id="audience" = "Niche"
              - when "w"
                span id="audience" = "Vaste"
        article
          - paragraphs.each do |paragraph|
            - case paragraph.type
              - when :blurb
                p class="blurb" == paragraph.to_s
              - when :plain
                p == paragraph.to_s
              - when :olitems
                ol class="olitems" type="#{paragraph.prop}" start="#{paragraph.olstart}"
                  - for item in paragraph.split "\n"
                    li == item
              - when :subheading
                h2 id="#{paragraph.bookmark}" = paragraph.to_s
              - when :footer
                footer
                  - for item in paragraph.split "\n"
                    p == item
              - when :codeblock
                pre
                  - if paragraph.prop == :coq
                    code class="language-coq" == paragraph.to_s
                  - else
                    // For attic
                    code class="language-cpp" == paragraph.to_s
              - when :images
                div class="imgrow"
                  - if paragraph.split("\n").length == 1
                    figure
                      img src="#{paragraph.split("\n")[0]}" style="width:100%"
                  - else
                    figure class="left"
                      img src="#{paragraph.split("\n")[0]}"
                    figure class="right"
                      img src="#{paragraph.split("\n")[1]}"
              - when :horizrule
                hr class="#{paragraph.prop}"
              - when :mathjax
                p class="mathjax" == paragraph.to_s
              - when :exercise
                p class="exercise" == paragraph.to_s
              - when :indent
                p class="indent" == paragraph.to_s
          - if indexfill && indexfill.any?
            ul id="indexfill"
              - indexfill.each do |page|
                li
                  a href="/#{page.permalink}" = page.title
      nav
        ul
          - topics.each do |topic|
            li
              a href="/#{topic}" = topic
